/**
 * 数组是值得有序集合。每个值叫做一个元素，而每个元素在数组中有一个位置，以数字表示，称为索引。js数组
 * 是无类型的：数组元素可以是任意类型，并且同一个数组中的不同元素也可能有不同的类型。数组的元素甚至
 * 也可能是对象或其他数组，这允许创建复杂的数据结构，如对象的数组和数组的数组。js数组的索引是基于零
 * 的32位数值：第一个元素的索引为0，最大可能的索引为4 294 967 294 （2^32 - 2），数组最大能容纳
 * 4294969295个元素。js数组是动态的：根据需要他们会增长或缩减并且在创建数组时无需声明一个固定的大小
 * 或者在数组大小变化时无需重新分配空间。js数组可能是稀疏的：数组元素的索引不一定要连续的，他们之间
 * 可以有空缺。每个js数组有一个length属性。针对非稀疏数组，该属性就是数组元素的个数。针对稀疏数组，
 * length比所有元素的索引要大
 * 
 * js数组是js对象的特殊形式，数组索引时间上和碰巧是整数的属性名差不多。我们将在本章的其他地方更多地
 * 讨论特殊化的数组。通常，数组的时间是经过优化的，用数字索引来访问数组元素一般来说比访问常规的对象
 * 属性要快很多
 * 
 * 数组继承自Array.prototype中的属性，它定义了一套丰富的数组操作方法，大多数这些方法是通用的，这
 * 意味着他们不仅对真正的数组有效，而且对'类数组对象'同样有效
 * 
 * 7.1创建数组
 */